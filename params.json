{"name":"Ko-filteredoptions","tagline":"A custom Knockout binding based on the 'options' binding: it allows to filter certain items of a bound collection, keeping them from being attached to the <select> control.","body":"### Introduction\r\nThis is a quite simple custom Knockout binding that I implemented due to a particular need I had with the project my colleague [codecoding](https://github.com/codecoding) and I were working on at the time.\r\n\r\nWe had a series of selection controls the sources of which would be retrieved from server on page load through AJAX requests, and then populated through the use of observable arrays and the 'options' binding. These controls were part of a form that was, in turn, also data-bound to a viewmodel.\r\n\r\nFor some reason we needed that, at some point, some of the options in our selection controls could be hidden, filtered out, so that they could not be selected. Removing these options from their respective observable arrays was not an acceptable solution: our data sources had to remain unchanged. Since these \"particular options\" had to be filtered according to a certain property's value in our form's data-bound viewmodel, we came up with the idea for our own custom 'options' binding.\r\n\r\n### So, what does it do?\r\nIt's probably easier to understand with an example so here it goes. We define to viewmodels, _Guest_ and _Meal_.\r\n```\r\nfunction Guest (name, isVegan) {\t\r\n  this.Name = ko.observable(name ? name : '');\r\n  this.IsVegan = ko.observable(isVegan ? isVegan : false);\r\n  this.SelectedMeal = ko.observable();\r\n}\r\n\r\nfunction Meal (name, isApt) {\r\n  this.Id = ko.observable();\r\n  this.Name = ko.observable(name ? name : '');\r\n  this.IsAptForVegans = ko.observable(isApt ? isApt : false);\r\n}\r\n```\r\nAs you can see, when instantiating a _Guest_ we must specify the guest's name and whether he/she is vegan or not. In turn, when instantiating a _Meal_ we must specify its name and whether it is apt for vegans or not. Next we define a collection of _Guests_ and a collection of _Meals_. ``\r\n```\r\nthis.Guests = ko.observableArray([\r\n  new Guest('Ernie', false),\r\n  new Guest('Bert', false),\r\n  new Guest('Cookie monster', true)\t\t\r\n]);\r\n\t\r\nthis.Meals = ko.observableArray([\r\n  new Meal('Pepperoni pizza', false),\r\n  new Meal('Chicken fingers', false),\r\n  new Meal('Chocolate cookies', true),\r\n  new Meal('Cheese burger', false),\r\n  new Meal('Fruit salad', true)\r\n]);\r\n```\r\n<iframe\r\n  style=\"width: 100%; height: 300px\"\r\n  src=\"http://jsfiddle.net/pchiwan/c55g2/4/embedded/result\">\r\n</iframe>\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}